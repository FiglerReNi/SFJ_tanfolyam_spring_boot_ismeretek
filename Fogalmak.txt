Spring Boot: Springre épülő másik keretrendszer. A Springben nagyon sok mindent be kell állítani xml konfiguráción keresztül. A Spring Boot-ban nagyon sok mindent készen kapunk, amin persze lehet változtatni.
	- könnyen válogatható modulok
	- egyértelmű belépőpont (public static void main)
	- beépített Tomcat

Webservice: xml/json válaszokat képes adni, a webapplication és az adatbázis között áll. Vagy egy mobilalkalmazás esetén közvetlenül a kliens (mobilalkalmazás) és az adatbázis között. Előnye: van egy weblapunk, egy mobilalkalmazásunk és mindkettő ugyanabból az adatbázisból dolgozik, mindkettő ugyanattól a webservicetől tud adatot kérni. A webservice kommunikál az adatbázissal és visszaadja a kért adatot. Közvetlenül az adatbázishoz így nem adunk hozzáférést. Egységes autentikáció lehet minden felületről, lehet rendszerezni ki hogyan fér hozzá az adatbázishoz. Ki milyen adatokat kérhet le.

Webapplication: a klienssel áll kapcsolatban -> pl. böngésző és html+css+js választ ad.

Spring Boot CLI: command line eszköz amin keresztül gyorsan lehet projekteket készíteni.

Microservice: A webserviceben lévő funkciókat szétszedjük  ún. microservicekre, így külön lehet őket kezelni, például teljesítmény/erőforrás szempontjából (skálázhatóság), vagy hogy milyen kliensről érjék el. Önmagában egy egység, egy adott feladatért felelős kis webservice. Így loosly coupled lesz a rendszerünk, ezeket tesztelni is sokkal könnyebb, hiszen a microservicek önmagukban egy egységek.
	- Webservice elérése két féleképp (ezek eljárások, hogy adatot kérhessünk a szervertől):
		- rest
		- soap (protokoll)

Groovy: Ez is egy programozási nyelv, szintén byte kódot készít amit a JVM értelmezni tud, mint a java.
		Kevesebb kódot kell írni, pl visszatérő értéknél nem kell használni a return szót.
		Letöltjük a legfrisebb verziót
		Command line-on keresztül használható program, így csinálunk hozzá környezeti változót.
		Ha ez megvan groovy -v paranccsal ellenőrizhetjük a verziót.
		

		
Spring Boot CLI: command line eszköz a spring boothoz, ezt is letöltjük. The Spring Boot CLI (Command Line Interface) is a command line tool that you can use to quickly prototype with Spring. It lets you run Groovy scripts, which means that you have a familiar Java-like syntax without so much boilerplate code. You do not need to use the CLI to work with Spring Boot, but it is definitely the quickest way to get a Spring application off the ground. 
spring help paranccsal ellenőrizzük, hogy működik-e, ehhez is megcsináljuk a környezeti változót.
Előnye, hogy prototipusokat nagyon gyorsan létre lehet vele hozni.

start.spring.io: másik út, ahogyan egy projektet nagyon gyorsan összeállíthatunk. Csak ki kell töltenünk mit szeretnénk, milyen függőségekre van szükségünk, és legenerálja az alapot.

STS ide:
	- srs/main/java/package - kódunk jön ide
	- src/main/resources/static - ide jönnek a videók, képek, statikus fájlok, amik nem módosulnak.
	- src/main/resources/templates - ide jönnek a honlapok, html kódok
	- src/main/resources/application.properties - ide tudunk specifiációkat, paramétereket tenni, amikor elindul a .jar programunk, innen kiveszi ezeket. Ha itt nincs semmi, akkor az alapbeállításokat használjuk. pl. mekkora legyen a heap mérete, milyen porton fusson az alkalmazás.
	- JRE System Library
	- Maven dependencies - a függőségeknek is lehet saját pom.xml fájluk, amivel újabb dolgoat hív meg. Így nagyon sok minden láncba van kötve.
	- pom.xml
	