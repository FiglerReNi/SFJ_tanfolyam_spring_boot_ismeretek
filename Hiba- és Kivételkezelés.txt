Hibaezelés:
 - Ha például olyan oldal elérést írunk be ami nem létezik, automatikusan kapunk egy hiba oldalt a java-tól.
 - Ezt lehet módosítani, html formázott környezetbe tenni, plusz adatokkal bővíteni
 
Hiba attribútumai
	- idő (mikor történt a hiba)
	- status (hiba kód)
	- error (not found)
	- message
	- path (milyen útvonalhoz kapcsolódóan)
		
 1. Egyszerű mód:
	- Beépülő megoldás: a templates-be létrehozunk egy error nevű templatet.
	- Ha ez létezik, akkor hiba esetén automatikusan ezt jeleníti meg a spring boot. Nem kell hozzá semmi más.
	- Automatikusan használható értéke:
			th:text="${error}"
		    th:text="${message}"
			
 2. Részletes hibakezelő:
	- Ha nem csak az error-t és message-t akarjuk használni, hanem részletesebb adatokat szeretnénk, vagy magyar leírást, akkor bele lehet nyúlni az automatikus hibakezelőbe.
	- Kell hozzá egy controller
	- Ebben megadjuk, hogy hiba esetén milyen útvonalra irányítsuk a felhasználót, majd ezt egy Requestmapping-el elkapjuk
	és összeállítjuk a sajár hibaüzenetünket, a saját hibaoldalunkkal.
	
Ha mindkét megoldás él a kódban a Controller-es az erősebb és ez fog működni

Kivételkezelés: Ha egy lekérdezés nem ad vissza eredményt, ha egy útvonalból várunk paramétert ami nincs, akkor ezeket az esetekez kezeljük kivételkezeléssel, Létrehozhatunk neki egy saját osztályt ha pl egységesen akarjuk kezelni, és akkor a eletkezés helyén dobjuk ezeket a kivételeket (throw new Exception) az osztály pedog kezeli.
	