Letöltés + környezeti változó létrehozása:
- tomcat
- groovy
- gradle
- spring boot cli
- maven
- STS ide

1. Projekt -- ElsoGroovy (létrehozás + futtatás)
	- Létrehozunk egy hello.groovy fájlt
	  /*Jelzi a spring számára, hogy ez egy speciális osztály, képes elkapni requesteket és választ adni rájuk.*/
	- @RestController
		class ThisWillActuallyRun {
			/*Útvonal amit a felhasználó beír. Ha a / jel után nem ír semmit akkor ide fog jutni. Milyen címre érkező requesteket kap el.*/
			@RequestMapping("/")
			String home() {
			"Hello World!"
			}
		}
	- Lefuttatjuk a spring-el a cli-t használva. Ez letölt mindent ami szükséges a projekthez. spring run hello.groovy
	- Indít egy tomcat szervert is a futtatáshoz, alapból a 8080 portot fogja használni, azonban ezt tudjuk módosítani:
		spring run hello.groovy -- --server.port=9000
		
2. Projekt -- ElsoJava (létrehozás)
	- start.spring.io oldalon generáltatjuk
	- web dependency
	- maven csomagolót választunk --> lesz egy pom.xml a létrejövő projektben
	
3. Projekt -- Demo (létrehozás)
	- alap séma létrehozása lehet command line-ból is
	- spring init
	- felcsatlakozik a start.spring.io-ra és létrehoz egy demo projektet
	
4. Projekt -- ElsoJava (futtatás)
	- mvn install --> central repositoryból leszedi az összes szükséges dependencyt, és össze is állítja a .jar/.war fájlt
	- létrehoz egy target mappát, ebben lesz a .jar fájl
		- jar.original --> ez a programunk 
		- jar --> ez tartalmazza a függőségeket is (fat jar a neve)
	
5.Projekt -- (létrehozás, futtatás)
	- STS ide segítségével alap projektet hozunk létre:
		- spring starter project, itt beállítjuk a dependencyket, csomagolót, java verziót
		- package név kisbetű mindig
		- osztály nevek nagybetűk
	- mvn install
	-(bemegyünk a target mappába): java -jar elsospring-0.1.jar